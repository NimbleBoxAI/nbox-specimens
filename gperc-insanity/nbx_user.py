# This is an autogenerated nbx_user.py file for a [NBX](www.nimblebox.ai) app:
# created time: Friday W34 [ UTC 26 Aug, 2022 - 08:40:13 ]
#   created by: yash_6352

import os

os.environ["NBOX_LOG_LEVEL"] = "debug" # Keep it the way you like

from nbox import Operator
from nbox.hyperloop.job_pb2 import Resource
from nbox.jobs import Schedule
from nbox import logger # Use this logger for printing

from gperc_net.train_cifar import train_model

def get_op(serving: bool = False) -> Operator:
  if serving:
    # initialise your Operator for NBX-Serving here
    operator = None

    # confused? uncomment lines below
    # from nbox.lib.demo import MagicServing
    # operator = MagicServing()
  else:
    # initialise your Operator for NBX-Job here
    operator = train_model

    # confused? uncomment lines below
    # from nbox.lib.demo import Magic
    # operator = Magic()

  return operator

def get_resource() -> Resource:
  """Define your pod config here"""
  return Resource(
    cpu = "100m",         # 100mCPU
    memory = "200Mi",     # MiB
    disk_size = "1Gi",    # GiB
    gpu = "none",         # keep "none" for no GPU
    gpu_count = "0",      # keep "0" when no GPU
    timeout = 120_000,    # 2 minutes between attempts
    max_retries = 3,      # third times the charm :P
  )

def get_schedule() -> Schedule:
  # only relevant for NBX-Jobs
  # define your schedule here, if None will run only once.
  return None

if __name__ == "__main__":
  op = get_op()
  op()
